apply plugin: "com.gorylenko.gradle-git-properties"
apply plugin: 'com.google.protobuf'

ext {
    set('springCloudVersion', "Hoxton.SR1")
}

gitProperties {
    // Change date format in git.properties file.
    dateFormat = "yyyy-MM-dd HH:mm:ssZ"
    dateFormatTimeZone = 'KST'
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//    implementation 'it.ozimov:embedded-redis:0.7.2'
    implementation 'de.codecentric:chaos-monkey-spring-boot:2.2.0'

    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'com.be-hase.grpc-micrometer:grpc-micrometer:0.0.2'
    implementation 'de.codecentric:chaos-monkey-spring-boot:2.2.0'
    implementation 'io.github.lognet:grpc-spring-boot-starter:3.5.1'
    implementation 'io.github.resilience4j:resilience4j-circuitbreaker:1.1.0'
    implementation 'io.github.resilience4j:resilience4j-micrometer:1.1.0'
    implementation 'io.github.resilience4j:resilience4j-prometheus:1.1.0'
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


sourceSets {
    main {
        java {
            srcDir 'src/main/protoGen'
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.6.1'
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.21.0"
        }
    }

    generateProtoTasks {
        ofSourceSet('main').each { task ->
            task.builtins {
                java{
                    outputSubDir = 'protoGen'
                }
            }
            task.plugins {
                grpc {
                    outputSubDir = 'protoGen'
                }

            }
        }
    }

    generatedFilesBaseDir = "$projectDir/build/"
}

task cleanProtoGen{
    doFirst{
        delete("$projectDir/build/main/protoGen")
    }
}

clean.dependsOn cleanProtoGen
